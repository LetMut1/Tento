services:
    postgresql_database_1:
        container_name: tento_postgresql_database_1
        build:
            context: ./service/postgresql
            dockerfile: dockerfile
        environment:
            PGDATA: '/var/lib/postgresql/data'
            POSTGRES_HOST_AUTH_METHOD: 'md5'
            POSTGRES_USER: 'root'
            POSTGRES_PASSWORD: 'password'
            POSTGRES_DB: 'tento'
        volumes:
            - postgresql_database_1_data:/var/lib/postgresql/data
        restart: always
    postgresql_database_1_client:
        container_name: tento_postgresql_database_1_client
        build:
            context: ./service/postgresql_client
            dockerfile: dockerfile
        ports:
        - 8081:8080
        restart: always
    postgresql_database_2:
        container_name: tento_postgresql_database_2
        build:
            context: ./service/postgresql
            dockerfile: dockerfile
        environment:
            PGDATA: '/var/lib/postgresql/data'
            POSTGRES_HOST_AUTH_METHOD: 'md5'
            POSTGRES_USER: 'root'
            POSTGRES_PASSWORD: 'password'
            POSTGRES_DB: 'tento'
        volumes:
            - postgresql_database_2_data:/var/lib/postgresql/data
        restart: always
    postgresql_database_2_client:
        container_name: tento_postgresql_database_2_client
        build:
            context: ./service/postgresql_client
            dockerfile: dockerfile
        ports:
        - 8082:8080
        restart: always
    postgresql_database_3:
        container_name: tento_postgresql_database_3
        build:
            context: ./service/postgresql
            dockerfile: dockerfile
        environment:
            PGDATA: '/var/lib/postgresql/data'
            POSTGRES_HOST_AUTH_METHOD: 'md5'
            POSTGRES_USER: 'root'
            POSTGRES_PASSWORD: 'password'
            POSTGRES_DB: 'tento'
        volumes:
            - postgresql_database_3_data:/var/lib/postgresql/data
        restart: always
    postgresql_database_3_client:
        container_name: tento_postgresql_database_3_client
        build:
            context: ./service/postgresql_client
            dockerfile: dockerfile
        ports:
        - 8083:8080
        restart: always
    diesel:
        container_name: tento_diesel
        build:
            context: ./service/diesel
            dockerfile: dockerfile
        volumes:
            - ./../../../:/_tento
        restart: always
        tty: true
        init: true
    mailhog:
        container_name: tento_mailhog
        build:
            context: ./service/mailhog
            dockerfile: dockerfile
        ports:
        - 8025:8025
        restart: always
volumes:
    postgresql_database_1_data:
        driver: local
    postgresql_database_2_data:
        driver: local
    postgresql_database_3_data:
        driver: local
networks:
    default:
        external: true
        name: resource